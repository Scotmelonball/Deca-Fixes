version: build-{build}
max_jobs: 1
image: Visual Studio 2022
clone_folder: C:\prj\deca
build_script:
- cmd: >-
    SET

    SET PATH=C:\Python38-x64;C:\Python38-x64\Scripts;%path%


    echo GET SUBMODULES

    cd C:\prj\deca

    echo git submodule init

    git config submodule.extern/HavokLib.url https://github.com/kk49/HavokLib.git

    git submodule update --init --recursive


    echo PATCH external libs
    
    cd c:\prj\deca\extern\HavokLib\3rd_party\PreCore
    
    git apply c:\prj\deca\patch\pre_core.patch


    echo BUILD C++

    call "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat"

    mkdir C:\prj\deca\build
    
    cd C:\prj\deca\build

    cmake -DPython3_ROOT_DIR=C:\Python38-x64 -DCMAKE_BUILD_TYPE=Release -G "NMake Makefiles" ..

    nmake

    mkdir C:\prj\deca\root

    mkdir C:\prj\deca\root\bin
    
    mkdir C:\prj\deca\root\lib
    
    copy C:\prj\deca\build\cpp\bin2xml\bin2xml* C:\prj\deca\root\bin\ 
    
    copy C:\prj\deca\build\cpp\process_image\process_image* C:\prj\deca\root\lib\ 

    copy C:\prj\deca\build\extern\HavokLib\source\havok.dll C:\prj\deca\root\bin\

    copy C:\prj\deca\build\extern\HavokLib\3rd_party\PreCore\precore6.dll C:\prj\deca\root\bin\

    copy C:\prj\deca\build\extern\HavokLib\3rd_party\PreCore\3rd_party\3rd_party\glm\glm\glm_shared.dll

    copy C:\prj\deca\build\extern\HavokLib\3rd_party\PreCore\3rd_party\pugixml\pugixml1.dll C:\prj\deca\root\bin\


    echo UN-PATCH external libs
    
    cd c:\prj\deca\extern\HavokLib\3rd_party\PreCore
    
    git apply -R c:\prj\deca\patch\pre_core.patch


    echo SETUP PYTHON

    cd C:\prj\deca

    c:\Python38-x64\python --version

    c:\Python38-x64\python -m pip list

    c:\Python38-x64\python -m venv venv

    venv\Scripts\activate

    pip list

    pip install wheel 
    
    pip install -r python/requirements.txt

    pip install pyinstaller

    pip install requests
    
    pip install -e python/deca/
    
    pip install -e python/deca_gui/


    echo PACKAGE

    cd C:\prj\deca

    pyinstaller deca_gui.spec --clean --noconfirm --distpath dist --workpath build_py 
    



after_build:
    cd dist\deca_gui

    7z a ..\..\deca_gui-b%APPVEYOR_BUILD_NUMBER%.zip *

artifacts:
- path: deca_gui-b%APPVEYOR_BUILD_NUMBER%.zip

deploy:
  artifact: deca_gui-b%APPVEYOR_BUILD_NUMBER%.zip
  prerelease: true
  description: 'Test Release'
  provider: GitHub
  auth_token:
    secure: fJVvaKg5+L0c1JRWMkuTHDvGKEU5xqjlCCI0vdQzN6M7uiTn54ZN0eJQ6Dx830HX
  on:
    # branch: master                 # release from master branch only
    APPVEYOR_REPO_TAG: true        # deploy on tag push only

on_success:
  - ps: cd C:\prj\deca
  - ps: python ./appveyor/on_success.py success CHANGELOG.md $env:BUILD_WEBHOOK_URL
